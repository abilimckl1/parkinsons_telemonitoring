setwd("D:/CDS501/parkinsons_telemonitoring")
library(tidyverse)
library(data.table)
library(ggplot2)
library(reshape2)
df <- read.csv("parkinsons.csv")
#Dropping Subject column
df <- subset (df, select = -subject.)
df <- distinct(df)
df1 <- unique(df)
#Lowercase all columns
names(df) <- tolower(names(df))
names(df)
#Renaming all columns for better handling
setnames(df, old = c('jitter...','jitter.abs.','jitter.rap','jitter.ppq5','jitter.ddp','shimmer.db.','shimmer.apq3','shimmer.apq5','shimmer.apq11','shimmer.dda'),
new = c('jitter','jitter_abs','jitter_rap','jitter_ppq5','jitter_ddp','shimmer_db','shimmer_apq3','shimmer_apq5','shimmer_apq11','shimmer_dda'))
glimpse(df)
y <- df[6:21]
#Initializing DF to Null
parkinson_data_clean <- NA
y <- df[6:21]
#Plotting with outliers
boxplot.default(df[,11:16])
#Plotting without outliers
boxplot.default(df_Shimmer[,11:16])
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-
x[x > (qnt[2] + H)] <- 150
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  qnt[1]  #1st quartile
x[x > (qnt[2] + H)] <-  qnt[2]  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  qnt[1]  #1st quartile
x[x > (qnt[2] + H)] <-  qnt[2]  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  mean(qnt[1])  #1st quartile
x[x > (qnt[2] + H)] <-  mean(qnt[2])  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[11:16])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  qnt[1]  #1st quartile
x[x > (qnt[2] + H)] <-  qnt[2]  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  0.01  #1st quartile
x[x > (qnt[2] + H)] <-  1  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  0.01  #1st quartile
x[x > (qnt[2] + H)] <-  0.1  #3rd quartile
x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  NA  #1st quartile
x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  NA  #1st quartile
#x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
boxplot(df[6:10])
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  NA  #1st quartile
x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  NA  #1st quartile
x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-    #1st quartile
x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-    #1st quartile
x[x > (qnt[2] + H)] <-  NA  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-   0 #1st quartile
x[x > (qnt[2] + H)] <-  0  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  -1 #1st quartile
x[x > (qnt[2] + H)] <-  -1  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
View(parkinson_data_clean)
#Initializing DF to NA
parkinson_data_clean <- NA
#Looping through all attributes to remove outliers, combined the tables and eliminate dupes
for (x in y){
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
x[x < (qnt[1] - H)] <-  -1 #1st quartile
x[x > (qnt[2] + H)] <-  1  #3rd quartile
x
# qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
# H <- 1.5 * IQR(x, na.rm = na.rm)
# x[x < (qnt[1] - H)] <- NA
# x[x > (qnt[2] + H)] <- NA
# x
}
parkinson_data_clean <- rbind(parkinson_data_clean,apply(df[, 0:21], 2, remove_outliers))
parkinson_data_clean <- na.omit(parkinson_data_clean)
}
parkinson_data_clean <- as.data.frame(parkinson_data_clean)
parkinson_data_clean <- distinct(parkinson_data_clean)
#Comparing cleaned and uncleaned data for the attributes
boxplot(parkinson_data_clean[6:10])
parkinson_data_clean.to_csv
path <- "D:/CDS501/parkinsons_telemonitoring"
write.csv(parkinson_data_clean, path+"\\Cleaned.csv", row.names = FALSE)
pathout <- "D:/CDS501/parkinsons_telemonitoring"
setwd(pathout)
filename <- paste(pathout, 'cleaned.csv', sep = '')
filename <- paste(pathout, '/cleaned.csv', sep = '')
write.csv(parkinson_data_clean, filename, row.names = FALSE)
